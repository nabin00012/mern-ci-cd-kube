services:
  # MongoDB Database
  mongo:
    image: mongo:7-jammy
    container_name: mern-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mernapp
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - mern-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Express.js Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mern-server
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongo:27017/mernapp?authSource=admin
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - mern-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: npm run dev

  # React.js Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    container_name: mern-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5001
      CHOKIDAR_USEPOLLING: "true"
      WDS_SOCKET_HOST: localhost
      WDS_SOCKET_PORT: 3000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - mern-network
    command: npm start

  # Nginx Reverse Proxy (Production-like setup)
  nginx:
    image: nginx:alpine
    container_name: mern-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - client
      - server
    networks:
      - mern-network
    profiles:
      - production

volumes:
  mongo_data:
    driver: local

networks:
  mern-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16